{"version":3,"sources":["utils.js","store/actions/Actions.js","store/actions/ActionsConstants.js","components/Search.jsx","components/Loader.jsx","components/SingleCard.jsx","components/GridComponent.jsx","containers/People.jsx","containers/Films.jsx","containers/Vehicles.jsx","containers/Planets.jsx","containers/Species.jsx","containers/Starships.jsx","containers/Main.jsx","components/Navbar.jsx","containers/EntityInfo.jsx","App.js","serviceWorker.js","store/reducers/Reducers.js","store/index.js","index.js"],"names":["url","debouncedDispatch","_","debounce","dispatch","action","splitId","str","splittedArr","split","filter","item","length","splitCategory","sortData","arr","key","sort","a","b","toLowerCase","fetchDataAxios","query","sortKey","fetchDataBegin","fetchedData","getAllData","mainQuery","axios","get","then","res","fixedUrl","concat","data","results","next","includes","replace","fetchDataSuccess","catch","error","fetchDataFailure","type","payload","result","Search","props","className","onChange","handleInput","placeholder","Loader","Spinner","animation","variant","SingleCard","entity","clickHandler","renderEntity","renderTitle","entityCategory","id","Card","bg","text","style","width","onClick","Header","Body","Text","to","GridComponent","loading","currentData","map","history","push","People","renderPeople","eye_color","skin_color","hair_color","gender","name","this","e","target","value","peopleData","React","Component","connect","state","mainState","Films","renderFilm","episode_id","producer","release_date","director","title","filmsData","Vehicles","renderVehicle","model","manufacturer","vehicle_class","vehiclesData","Planets","renderPlanet","climate","terrain","gravity","diameter","planetsData","Species","renderSpecies","skin_colors","language","speciesData","Starships","renderStarship","consumables","starshipsData","Main","Jumbotron","fluid","Container","Image","src","NavigationStarwars","Navbar","sticky","Brand","href","Nav","children","LinkProperty","getEntity","LinksProperty","EntityInfo","category","fetch","json","setState","match","params","objDataToArray","Object","entries","propsWithSingleLink","propsWithMultipleLinks","App","path","exact","component","Boolean","window","location","hostname","initStore","searchPeople","reducers","combineReducers","initialState","enhanceMiddleWare","navigator","userAgent","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","createBrowserHistory","ReactDOM","render","basename","process","document","getElementById","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.73e45bd2.chunk.js","sourcesContent":["import _ from \"lodash\";\nexport const url = `https://swapi.dev/api/`;\n\nexport const debouncedDispatch = _.debounce(function (dispatch, action) {\n  dispatch(action);\n}, 250);\n\nexport function splitId(str) {\n  const splittedArr = str.split(\"/\").filter((item) => item !== \"\");\n  return splittedArr[splittedArr.length - 1];\n}\n\nexport function splitCategory(str) {\n  const splittedArr = str.split(\"/\").filter((item) => item !== \"\");\n  return splittedArr[splittedArr.length - 2];\n}\n\nexport function sortData(arr, key) {\n  return arr.sort(function (a, b) {\n      if (a[key] && b[key]) {\n        if (a[key].toLowerCase() < b[key].toLowerCase()) return -1;\n        if (a[key].toLowerCase() > b[key].toLowerCase()) return 1;\n      }\n      return 0;\n    })\n}","import axios from \"axios\";\nimport { url, sortData } from \"../../utils\";\nimport {\n  FETCH_DATA_BEGIN,\n  FETCH_DATA_SUCCESS,\n  FETCH_DATA_FAILURE\n} from \"./ActionsConstants\";\n\nexport function fetchDataAxios(key, query, sortKey) {\n  return (dispatch) => {\n    dispatch(fetchDataBegin());\n    let fetchedData = [];\n    const getAllData = (mainQuery) => {\n      return axios\n        .get(mainQuery)\n        .then((res) => {\n          fetchedData = fetchedData.concat(res.data.results);\n          if (res.data.next !== null) {\n              let fixedUrl;\n              if (!res.data.next.includes('https')) {\n                fixedUrl = res.data.next.replace(\"http\", \"https\")\n              } else {\n                fixedUrl = res.data.next\n              }\n            getAllData(`${fixedUrl}`);\n          } else {\n            dispatch(fetchDataSuccess(key, fetchedData, sortKey));\n          } \n        })\n        .catch((error) => dispatch(fetchDataFailure(error)));\n    };\n    return getAllData(`${url}${query}`);\n  };\n}\n\nexport const fetchDataBegin = () => ({\n  type: FETCH_DATA_BEGIN,\n});\n\nexport const fetchDataSuccess = (key, data, sortKey) => ({\n  type: FETCH_DATA_SUCCESS,\n  payload: {\n    result: sortData(data, sortKey),\n    key,\n  },\n});\n\nexport const fetchDataFailure = (error) => ({\n  type: FETCH_DATA_FAILURE,\n  payload: { error },\n});","export const FETCH_DATA_BEGIN = \"FETCH_DATA_BEGIN\";\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\nexport const FETCH_DATA_FAILURE = \"FETCH_DATA_FAILURE\";","import React from \"react\";\n\nexport default function Search(props) {\n  return (\n    <div className=\"input-search\">\n      <input\n        type=\"search\"\n        onChange={props.handleInput}\n        placeholder=\"Search...\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nexport default function Loader() {\n  return (\n    <div>\n      <Spinner animation=\"grow\" variant=\"secondary\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { splitId } from \"../utils\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SingleCard(props) {\n  const {\n    entity: { url },\n    clickHandler,\n    renderEntity,\n    renderTitle,\n    entityCategory,\n  } = props;\n  const id = splitId(url);\n  \n  return (\n    <Card\n      bg=\"secondary\"\n      key=\"1\"\n      text=\"white\"\n      style={{ width: \"18rem\" }}\n      className=\"mb-2\"\n      onClick={clickHandler}\n    >\n      <Card.Header>{renderTitle(props.entity)}</Card.Header>\n      <Card.Body>\n        <Card.Text>{renderEntity(props.entity)}</Card.Text>\n      </Card.Body>\n      <Link to={`/${entityCategory}/${id}`}>Details</Link>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport Loader from \"../components/Loader\";\nimport SingleCard from \"../components/SingleCard\";\nimport { splitId } from \"../utils\";\n\nexport default function GridComponent(props) {\n  return !props.loading ? (\n    props.currentData && props.currentData.length ? (\n      <ul className=\"starwarsData-grid\">\n        {props.currentData.map((item) => (\n          <SingleCard\n            entity={item}\n            entityCategory={props.entityCategory}\n            renderEntity={props.renderEntity}\n            renderTitle={props.renderTitle}\n            clickHandler={() => {\n              props.history.push(\n                `/${props.entityCategory}/${splitId(item.url)}`\n              );\n            }}\n          />\n        ))}\n      </ul>\n    ) : (\n      `no ${props.entityCategory}`\n    )\n  ) : (\n    <Loader />\n  );\n}\n","import React from \"react\";\nimport \"../App.css\";\nimport { fetchDataAxios } from \"../store/actions/Actions\";\nimport { connect } from \"react-redux\";\nimport Search from \"../components/Search\";\nimport GridComponent from \"../components/GridComponent\";\nimport { debouncedDispatch } from \"../utils\";\n\nclass People extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchDataAxios(\"peopleData\", \"people/\", \"name\"));\n  }\n\n  renderPeople = ({ eye_color, skin_color, hair_color, gender }) => {\n    return (\n      <ul>\n        <li>Eyecolor: {eye_color}</li>\n        <li>Skincolor: {skin_color}</li>\n        <li>Haircolor: {hair_color}</li>\n        <li>Gender: {gender}</li>\n      </ul>\n    );\n  };\n\n  renderTitle = ({ name }) => name;\n\n  render() {\n    return (\n      <div>\n        <h1>People</h1>\n        <Search\n          handleInput={(e) => {\n            debouncedDispatch(\n              this.props.dispatch,\n              fetchDataAxios(\"peopleData\", `people/?search=${e.target.value}`, \"name\")\n            );\n          }}\n        />\n        <GridComponent\n          loading={this.props.loading}\n          currentData={this.props.peopleData}\n          history={this.props.history}\n          entityCategory=\"people\"\n          renderEntity={this.renderPeople}\n          renderTitle={this.renderTitle}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.mainState.loading,\n    peopleData: state.mainState.peopleData,\n  };\n};\nexport default connect(mapStateToProps)(People);\n","import React from \"react\";\nimport \"../App.css\";\nimport { fetchDataAxios } from \"../store/actions/Actions\";\nimport { connect } from \"react-redux\";\nimport GridComponent from \"../components/GridComponent\";\nimport { debouncedDispatch } from \"../utils\";\nimport Search from \"../components/Search\";\n\nclass Films extends React.Component {\n\n  componentDidMount() {\n    this.props.dispatch(fetchDataAxios(\"filmsData\", \"films/\", \"title\"));\n  }\n\n  renderFilm = ({ episode_id, producer, release_date, director }) => {\n    return (\n      <ul>\n        <li>Episode: {episode_id}</li>\n        <li>Producer: {producer}</li>\n        <li>Release: {release_date}</li>\n        <li>Director: {director}</li>\n      </ul>\n    );\n  };\n\n  renderTitle = ({ title }) => title;\n\n  render() {\n    return (\n      <div>\n        <h1>Films</h1>\n        <Search\n          handleInput={(e) => {\n            debouncedDispatch(\n              this.props.dispatch,\n              fetchDataAxios(\"filmsData\", `films/?search=${e.target.value}`, \"title\")\n            );\n          }}\n        />\n        <GridComponent\n          loading={this.props.loading}\n          currentData={this.props.filmsData}\n          history={this.props.history}\n          entityCategory=\"films\"\n          renderEntity={this.renderFilm}\n          renderTitle={this.renderTitle}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.mainState.loading,\n    filmsData: state.mainState.filmsData,\n  };\n};\n\nexport default connect(mapStateToProps)(Films);\n","import React from \"react\";\nimport \"../App.css\";\nimport { fetchDataAxios } from \"../store/actions/Actions\";\nimport { connect } from \"react-redux\";\nimport GridComponent from \"../components/GridComponent\";\nimport { debouncedDispatch } from \"../utils\";\nimport Search from \"../components/Search\";\n\nclass Vehicles extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchDataAxios(\"vehiclesData\", \"vehicles/\", \"name\"));\n  }\n\n  renderTitle = ({ name }) => name;\n\n  renderVehicle = ({model, manufacturer, vehicle_class}) => {\n    return (\n      <ul>\n        <li>Model: {model}</li>\n        <li>Vehicle class: {vehicle_class}</li>\n        <li>Manufacturer: {manufacturer}</li>\n      </ul>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Vehicles</h1>\n        <Search\n          handleInput={(e) => {\n            debouncedDispatch(\n              this.props.dispatch,\n              fetchDataAxios(\n                \"vehiclesData\",\n                `vehicles/?search=${e.target.value}`,\n                \"name\"\n              )\n            );\n          }}\n        />\n        <GridComponent\n          loading={this.props.loading}\n          currentData={this.props.vehiclesData}\n          history={this.props.history}\n          entityCategory=\"vehicles\"\n          renderTitle={this.renderTitle}\n          renderEntity={this.renderVehicle}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.mainState.loading,\n    vehiclesData: state.mainState.vehiclesData\n\n  };\n};\n\nexport default connect(mapStateToProps)(Vehicles);\n","import React from \"react\";\nimport { fetchDataAxios } from \"../store/actions/Actions\";\nimport { connect } from \"react-redux\";\nimport GridComponent from \"../components/GridComponent\";\nimport { debouncedDispatch } from \"../utils\";\nimport Search from \"../components/Search\";\n\nclass Planets extends React.Component {\n\n  componentDidMount() {\n    this.props.dispatch(fetchDataAxios(\"planetsData\", \"planets/\", \"name\"));\n  }\n\n  renderPlanet = ({climate, terrain, gravity, diameter}) => {\n    return (\n      <ul>\n        <li>Climate: {climate}</li>\n        <li>Terrain: {terrain}</li>\n        <li>Gravity: {gravity}</li>\n        <li>Diameter: {diameter}</li>\n      </ul>\n    );\n  };\n  \n  renderTitle = ({ name }) => name;\n\n  render() {\n    return (\n      <div>\n        <h1>Planets</h1>\n        <Search\n          handleInput={(e) => {\n            debouncedDispatch(\n              this.props.dispatch,\n              fetchDataAxios(\"planetsData\", `planets/?search=${e.target.value}`, \"name\")\n            );\n          }}\n        />\n        <GridComponent\n          loading={this.props.loading}\n          currentData={this.props.planetsData}\n          history={this.props.history}\n          entityCategory=\"planets\"\n          renderEntity={this.renderPlanet}\n          renderTitle={this.renderTitle}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.mainState.loading,\n    planetsData: state.mainState.planetsData,\n  };\n};\nexport default connect(mapStateToProps)(Planets);\n","import React from \"react\";\nimport { fetchDataAxios } from \"../store/actions/Actions\";\nimport { connect } from \"react-redux\";\nimport GridComponent from \"../components/GridComponent\";\nimport { debouncedDispatch } from \"../utils\";\nimport Search from \"../components/Search\";\n\nclass Species extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchDataAxios(\"speciesData\", \"species/\", \"name\"));\n  }\n\n  renderTitle = ({ name }) => name;\n\n  renderSpecies = ({name, skin_colors, language}) => {\n    return (\n      <ul>\n        <li>Name: {name}</li>\n        <li>Skin colors: {skin_colors}</li>\n        <li>Language: {language}</li>\n      </ul>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Species</h1>\n        <Search\n          handleInput={(e) => {\n            debouncedDispatch(\n              this.props.dispatch,\n              fetchDataAxios(\"speciesData\", `species/?search=${e.target.value}`, \"name\")\n            );\n          }}\n        />\n        <GridComponent\n          loading={this.props.loading}\n          currentData={this.props.speciesData}\n          history={this.props.history}\n          entityCategory=\"species\"\n          renderTitle={this.renderTitle}\n          renderEntity={this.renderSpecies}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.mainState.loading,\n    speciesData: state.mainState.speciesData\n  };\n};\n\nexport default connect(mapStateToProps)(Species);\n","import React from \"react\";\nimport { fetchDataAxios } from \"../store/actions/Actions\";\nimport { connect } from \"react-redux\";\nimport GridComponent from \"../components/GridComponent\";\nimport { debouncedDispatch } from \"../utils\";\nimport Search from \"../components/Search\";\n\nclass Starships extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchDataAxios(\"starshipsData\", \"starships/\", \"name\"));\n  }\n\n  renderStarship = ({name, consumables, model}) => {\n    return (\n      <ul>\n        <li>Name: {name}</li>\n        <li>Consumables: {consumables}</li>\n        <li>Model: {model}</li>\n      </ul>\n    );\n  };\n\n  renderTitle = ({ name }) => name;\n\n  render() {\n    return (\n      <div>\n        <h1>Starships</h1>\n        <Search\n          handleInput={(e) => {\n            debouncedDispatch(\n              this.props.dispatch,\n              fetchDataAxios(\n                \"starshipsData\",\n                `starships/?search=${e.target.value}`,\n                \"name\"\n              )\n            );\n          }}\n        />\n        <GridComponent\n          loading={this.props.loading}\n          currentData={this.props.starshipsData}\n          history={this.props.history}\n          entityCategory=\"starships\"\n          renderTitle={this.renderTitle}\n          renderEntity={this.renderStarship}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.mainState.loading,\n    starshipsData: state.mainState.starshipsData\n  };\n};\n\nexport default connect(mapStateToProps)(Starships);\n","import React from \"react\";\nimport { Image, Jumbotron, Container } from \"react-bootstrap\";\n\nexport default function Main() {\n  return (\n    <div>\n      <Jumbotron fluid>\n        <Container>\n          <h1>Welcome to our awesome app! Join to StarWars Universe!</h1>\n          <p>\n            Star Wars is a science-fiction franchise comprising movies, books,\n            comics, video games, toys, and animated shows. It is a fictional\n            universe created by George Lucas. The Star Wars story employs\n            archetypal motifs common to science fiction, political climax and\n            classical mythology, as well as musical motifs of those aspects.\n          </p>\n          <Image\n            src=\"https://cdn.pocket-lint.com/r/s/1200x/assets/images/147767-tv-feature-what-order-should-you-watch-all-the-star-wars-films-image1-1wdfjceytb.jpg\"\n            fluid\n          />\n          <p>\n            As one of the foremost examples of the space opera subgenre of\n            science fiction, Star Wars has become part of mainstream popular\n            culture, as well as being one of the highest-grossing series of all\n            time. It is currently the second highest-grossing film series behind\n            only the Marvel Cinematic Universe.[1] and also the second\n            highest-grossing media franchise of all time (with only the Japanese\n            franchise Pokémon outranking it)\n          </p>\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nfunction NavigationStarwars(props) {\n  return (\n    <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"#main\">Navbar</Navbar.Brand>\n      <Nav className=\"d-flex justify-content-around SW-nav\">\n        {props.children}\n      </Nav>\n    </Navbar>\n  );\n}\nexport default NavigationStarwars;\n","import React from \"react\";\nimport { url, splitCategory, splitId } from \"../utils\";\nimport { Jumbotron, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction LinkProperty(props) {\n  return (\n    <Link\n      to={`/${splitCategory(props.value)}/${splitId(props.value)}`}\n      onClick={() => {\n        props.getEntity(splitCategory(props.value), splitId(props.value));\n      }}\n    >\n      {props.value}\n    </Link>\n  );\n}\n\nfunction LinksProperty(props) {\n  return (\n    <ul>\n      {props.value.map((data) => (\n        <li>\n          <LinkProperty value={data} getEntity={props.getEntity} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nclass EntityInfo extends React.Component {\n  state = {\n    entity: null,\n  };\n\n  getEntity = async (category, id) => {\n    const data = await fetch(`${url}${category}/${id}/`);\n    const json = await data.json();\n    this.setState({\n      entity: json,\n    });\n  };\n\n  async componentDidMount() {\n    this.getEntity(\n      this.props.match.params.entityCategory,\n      this.props.match.params.id\n    );\n  }\n\n  render() {\n    const { entity } = this.state;\n    const objDataToArray = entity && Object.entries(entity);\n    const propsWithSingleLink = [\"homeworld\", \"url\"];\n    const propsWithMultipleLinks = [\n      \"films\",\n      \"species\",\n      \"vehicles\",\n      \"starships\",\n      \"pilots\",\n      \"people\",\n      \"characters\",\n      \"residents\",\n      \"planets\",\n    ];\n\n    return (\n      <div>\n        <Jumbotron className=\"charInfo\">\n          <Container>\n            <h2 className=\"greet\">\n              Hello I am a &nbsp;{\" \"}\n              {entity && (entity.name ? entity.name : entity.title)}\n            </h2>\n            {entity ? (\n              <ul>\n                {objDataToArray.map(([key, value]) => (\n                  <li>\n                    <h4>{key}:</h4>\n                    {propsWithMultipleLinks.includes(key) ? (\n                      <LinksProperty value={value} getEntity={this.getEntity} />\n                    ) : propsWithSingleLink.includes(key) ? (\n                      <LinkProperty value={value} getEntity={this.getEntity} />\n                    ) : (\n                      <p>{value}</p>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              \"No enteties\"\n            )}\n          </Container>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    mainState: state.mainState,\n  };\n};\nexport default connect(mapStateToProps)(EntityInfo);\n","import React from \"react\";\nimport People from \"./containers/People\";\nimport Films from \"./containers/Films\";\nimport Vehicles from \"./containers/Vehicles\";\nimport Planets from \"./containers/Planets\";\nimport Species from \"./containers/Species\";\nimport Starships from \"./containers/Starships\";\nimport Main from \"./containers/Main\";\nimport NavigationStarwars from \"./components/Navbar.jsx\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport EntityInfo from \"./containers/EntityInfo.jsx\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div>\n      <NavigationStarwars>\n        <NavLink to=\"/\">Main</NavLink>\n        <NavLink to=\"/people\">People</NavLink>\n        <NavLink to=\"/planets\">Planets</NavLink>\n        <NavLink to=\"/films\">Films</NavLink>\n        <NavLink to=\"/vehicles\">Vehicles</NavLink>\n        <NavLink to=\"/species\">Species</NavLink>\n        <NavLink to=\"/starships\">Starships</NavLink>\n      </NavigationStarwars>\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/:entityCategory/:id\" component={EntityInfo} />\n        <Route path=\"/people/\" exact component={People} />\n        <Route path=\"/planets/\" exact component={Planets} />\n        <Route path=\"/films/\" exact component={Films} />\n        <Route path=\"/vehicles/\" exact component={Vehicles} />\n        <Route path=\"/species/\" exact component={Species} />\n        <Route path=\"/starships/\" exact component={Starships} />\n      </Switch>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  FETCH_DATA_BEGIN,\n  FETCH_DATA_SUCCESS,\n  FETCH_DATA_FAILURE,\n} from \"../actions/ActionsConstants\";\n\nlet initStore = {\n  loading: true,\n  searchPeople: \"\",\n};\n\nexport const mainReducer = (initialState = initStore, action) => {\n  if (action.type === FETCH_DATA_BEGIN) {\n    return {\n      ...initialState,\n      loading: true,\n      error: null,\n    };\n  }\n  if (action.type === FETCH_DATA_SUCCESS) {\n    return {\n      ...initialState,\n      loading: false,\n      [action.payload.key]: action.payload.result,\n    };\n  }\n  if (action.type === FETCH_DATA_FAILURE) {\n    return {\n      ...initialState,\n      loading: false,\n      error: action.payload.error,\n    };\n  }\n  return {\n    ...initialState,\n  };\n};\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { compose } from \"redux\";\nimport { mainReducer } from \"./reducers/Reducers\";\n\nconst reducers = combineReducers({\n  mainState: mainReducer,\n});\n\nconst enhanceMiddleWare = window.navigator.userAgent.includes(\"Chrome\")\n  ? compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  : compose(applyMiddleware(thunk));\n\nexport const store = createStore(reducers, enhanceMiddleWare);\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/index';\n\nconst history = createBrowserHistory();\nReactDOM.render(\n  <Provider store={store}>\n      <Router history={history} basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </Provider>\n    ,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}